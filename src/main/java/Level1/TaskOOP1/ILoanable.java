package Level1.TaskOOP1;

//интерфейс определяет контракт для объектов, которые можно выдавать пользователям.
//внедрение данного интерфейса способствует более легкому внедрению и расширению программы, если вдруг появится другой способ выдачи книги
//Разделение ответственности – Librarian остаётся просто библиотекарем, а не монолитным классом со всеми возможными функциями.
//Использование интерфейса разделяет ответственность, улучшает гибкость и упрощает расширяемость кода.
// В реальном проекте библиотекарем может быть человек, робот, онлайн-система – интерфейс позволяет работать с ними единообразно.

public interface ILoanable {
    void borrowBook(String title, User user) throws BookNotAvailableException;
    void returnBook(String title, User user);
}
