package Level1;

public class Main {
}

/*
Task1
Поиск идентификатора объектов в памяти*/

/*
Task2
Определение загрузчиков классов*/

/*
Task3
Работа с объектами Class */

/*
TaskOOP2
1. Базовая задача – Учёт товаров в магазине (уровень новичка)
Цель: Понять, как хранить данные об объектах, их свойствах и простых операциях (добавление, удаление).
Условие:
Создай систему учёта товаров в магазине. У каждого товара есть:
•	Название
•	Цена
•	Количество на складе
Функционал:
1.	Добавить новый товар.
2.	Обновить количество товара.
3.	Вывести список всех товаров с ценами и количеством.*/

/*
TaskOOP3
2. Учет заказов в аптеке (уровень проще среднего)
Цель: Понять взаимодействие двух объектов, работу с коллекциями и статусами.
Условие:
Создай систему учёта заказов в аптеке. Есть два класса:
•	Medicine (лекарство) с названием, ценой и количеством.
•	Order (заказ), который содержит список купленных лекарств и статус (“Новый”, “Оплачен”, “Выдан”).
Функционал:
1.	Добавить заказ с нужными лекарствами.
2.	Оплатить заказ.
3.	Выдать заказ клиенту.
Подсказка:
•	Используй ArrayList<Medicine> внутри Order.
•	Добавь enum OrderStatus { NEW, PAID, DELIVERED } для статусов.
•	В классе Pharmacy храни заказы (List<Order>).*/

/*
TaskOOP4
ЗАДАЧА 3: Учет заказов в кафе (уровень проще среднего)
Условие:
Создай систему учета заказов в кафе.
Есть два класса:
•	MenuItem (позиция в меню) с названием и ценой.
•	Order (заказ), который содержит список заказанных блюд и статус (Новый, Оплачен, Готов).
Функционал:
1.	Создать заказ и добавить в него блюда.
2.	Оплатить заказ.
3.	Отметить заказ как готовый.
Подсказки:
•	Используй ArrayList<MenuItem> внутри Order.
•	Для статусов используй enum OrderStatus { NEW, PAID, READY }.
•	Сделай класс Cafe, где будут храниться заказы (List<Order>).*/